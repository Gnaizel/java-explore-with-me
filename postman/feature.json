{
  "info": {
    "name": "CommentServiceTests",
    "description": "Postman collection for testing CommentService endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080"
    },
    {
      "key": "userId",
      "value": "1"
    },
    {
      "key": "eventId",
      "value": "1"
    },
    {
      "key": "commentId",
      "value": "1"
    }
  ],
  "item": [
    {
      "name": "Get Comments by Event",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/users/{{userId}}/events/{{eventId}}/comments",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{userId}}",
            "events",
            "{{eventId}}",
            "comments"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response is an array\", function () {",
              "    pm.expect(pm.response.json()).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Comment",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"comment\": \"Test comment\"}"
        },
        "url": {
          "raw": "{{base_url}}/users/{{userId}}/events/{{eventId}}/comments",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{userId}}",
            "events",
            "{{eventId}}",
            "comments"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Response contains the new comment\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.some(c => c.comment === 'Test comment')).to.be.true;",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Comment",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"comment\": \"Updated comment\"}"
        },
        "url": {
          "raw": "{{base_url}}/users/{{userId}}/events/comments/{{commentId}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{userId}}",
            "events",
            "comments",
            "{{commentId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Comment updated successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.some(c => c.comment === 'Updated comment')).to.be.true;",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Delete Comment",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}/users/{{userId}}/events/comments/{{commentId}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{userId}}",
            "events",
            "comments",
            "{{commentId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Comment deleted successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    // Ensure the deleted comment is no longer present",
              "    pm.expect(jsonData.every(c => c.id !== parseInt(pm.variables.get('commentId')))).to.be.true;",
              "});"
            ]
          }
        }
      ]
    }
  ]
}